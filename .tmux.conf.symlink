set-option -g default-shell /usr/bin/zsh
# set terminal to 256 colors
#set -g default-terminal "screen-256color"
#
set -sg escape-time 0
#
set -g status on

# Set the prefix to ^A.
# unbind C-b
# set -g prefix ^A
# bind a send-prefix

set -g lock-command vlock
set -g lock-after-time 1800

# screen ^C c
unbind ^C
bind ^C new-window
unbind c
bind c new-window

# detach ^D d
unbind ^D
bind ^D detach

# displays *
unbind *
bind * list-clients

# next ^@ ^N sp n
unbind ^@
bind ^@ next-window
unbind ^N
bind ^N next-window
unbind " "
bind " " next-window
unbind n
bind n next-window

# title A
unbind A
bind A command-prompt "rename-window %%"

# other ^A
unbind ^A
bind ^A last-window

# prev ^H ^P p ^?
unbind ^H
bind ^H previous-window
unbind ^P
bind ^P previous-window
unbind p
bind p previous-window
unbind BSpace
bind BSpace previous-window

# windows ^W w
unbind ^W
bind ^W list-windows
unbind w
bind w list-windows

# quit \
unbind \
bind \ confirm-before "kill-server"

# kill K k
unbind K
bind K confirm-before "kill-window"

# redisplay ^L l
unbind ^L
bind ^L refresh-client

# More straight forward key bindings for splitting
unbind %
bind | split-window -h
bind - split-window -v
bind / command-prompt "split-window 'exec %%'"
bind S command-prompt "new-window -n %1 'ssh %1'"

# History
set -g history-limit 4096

# Terminal emulator window title
set -g set-titles on
set -g set-titles-string '#S:#I.#P #W'

# powerline setup
set-option -g status-bg colour235
set-option -g status-fg colour24
set -g status-attr bright
set-option -g status on
set-option -g status-interval 2
set-option -g status-justify "centre"
set-option -g status-left-length 80
set-option -g status-right-length 50

set -g status-left '#[fg=colour255, bg=colour24] #(date +"%H:%M") #[fg=colour24, bg=colour32]#[fg=colour255, bg=colour32] [#S] #[fg=colour32, bg=colour235]'
set -g status-right '#[fg=colour32, bg=colour235]#[fg=colour255, bg=colour32] #H #[fg=colour24, bg=colour32]#[fg=colour255, bg=colour24] #(date +"%F") '

set-window-option -g window-status-current-format "#[fg=colour24, bg=colour235]#[fg=colour255, bg=colour24] #I | #W #[fg=colour24, bg=colour235]"
set-window-option -g window-status-format "#[fg=colour250, bg=colour24] #I|#W "

# Notifying if other windows has activities
setw -g monitor-activity on
set -g visual-activity off

# Clock
setw -g clock-mode-style 24

# Panes
# set -g mouse-resize-pane on
# set -g mouse-select-pane on

# Windows
# set -g mouse-select-window on
# setw -g mode-mouse on

# " windowlist -b
bind a choose-window

# act like vim
setw -g mode-keys vi
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
bind-key -r C-h select-window -t :-
bind-key -r C-l select-window -t :+
# bind -T vi-copy v begin-selection
# bind -T vi-copy y copy-selection
# bind -T vi-copy Escape cancel

# to paste
bind-key C-v run "xsel -o | tmux load-buffer - ; tmux paste-buffer"

setw -g display-panes-time 2000
bind ^s display-panes \; command-prompt "swap-pane -s %1"
# panes start at 1
set -g base-index 1
set -g pane-base-index 1

bind c new-window -c '#{pane_current_path}'
bind C-p last-window

# smart pane switching with awareness of emacs splits
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim(diff)?$|emacs.*$' && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim(diff)?$|emacs.*$' && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim(diff)?$|emacs.*$' && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim(diff)?$|emacs.*$' && tmux send-keys C-l) || tmux select-pane -R"

bind-key v split-window -h -c "#{pane_current_path}"
bind-key s split-window -v -c "#{pane_current_path}"
bind - resize-pane -U 2
bind _ resize-pane -U 16
bind = resize-pane -D 2
bind + resize-pane -D 16
bind 9 resize-pane -L 6
bind ( resize-pane -L 24
bind 0 resize-pane -R 6
bind ) resize-pane -R 24

set -g detach-on-destroy off
setw -g alternate-screen off

bind M-l next-layout
set -g terminal-overrides 'xterm:colors=256'

set -g mouse on
